cmake_minimum_required(VERSION 3.8)
project(cart_pole_lypunov_lqr)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(sensor_msgs REQUIRED)
# Find Eigen3
find_package(Eigen3 REQUIRED)


# Include directories
include_directories(${EIGEN3_INCLUDE_DIRS})
# uncomment the following section in order to fill in
# further dependencies manually.
# find_package(<dependency> REQUIRED)

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # comment the line when a copyright and license is added to all source files
  set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # comment the line when this package is in a git repo and when
  # a copyright and license is added to all source files
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

add_executable(controller src/gazebo_feedback_and_controller.cpp)
ament_target_dependencies(controller  rclcpp sensor_msgs Eigen3)

install(TARGETS
  controller 
  DESTINATION lib/${PROJECT_NAME})

  add_executable(rviz_viewer src/rviz_position_check.cpp)
  ament_target_dependencies(rviz_viewer  rclcpp sensor_msgs Eigen3)
  
  install(TARGETS
    rviz_viewer
    DESTINATION lib/${PROJECT_NAME})

    add_executable(force_vector_determoner src/effort_to_determine_direction.cpp)
    ament_target_dependencies(force_vector_determoner  rclcpp sensor_msgs Eigen3)
    
    install(TARGETS
      force_vector_determoner
      DESTINATION lib/${PROJECT_NAME})


  install(DIRECTORY
  config
  launch
  DESTINATION share/${PROJECT_NAME}
)

ament_package()
